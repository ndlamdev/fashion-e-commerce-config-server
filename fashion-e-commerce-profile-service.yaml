eureka:
  client:
    serviceUrl:
      defaultZone: ${EUREKA_ZONE:https://eureka-server.ndlamdev.website/fashion-e-commerce-eureka-server}/eureka/
    registerWithEureka: true
    fetchRegistry: true
  instance:
    preferIpAddress: true
    lease-renewal-interval-in-seconds: 5
    lease-expiration-duration-in-seconds: 10
    metadata-map:
      grpc.port: ${grpc.server.port}

server:
  servlet:
    context-path: /api
  port: 8002

spring:
  kafka:
    bootstrap-servers: ${KAFKA_SERVER:localhost:9092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring:
          json:
            type:
              mapping: "info_address_shipping:com.lamnguyen.profile_service.message.InfoAddressShipping"
    consumer:
      group-id: user-detail
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: "save_user_detail"
            type:
              mapping: "save_user_detail:com.lamnguyen.profile_service.message.SaveUserDetailMessage"
  application:
    name: fashion-e-commerce-profile-service
  jpa:
    hibernate:
      ddl-auto: none
    show-sql: ${SHOW_SQL:true}
    properties:
      hibernate:
        format_sql: ${HIBERNATE_FORMAT_SQL:true}
  flyway:
    user: ${spring.datasource.username}
    password: ${spring.datasource.password}
    schemas: ${application.database}
    url: ${spring.datasource.url}
    locations: classpath:db/migration
  jackson:
    mapper:
      sort-properties-alphabetically: false

application:
  white-list:
    - /greeting
    - /v1/profile/*
    - /v1/profile/*/addresses
    - /v1/profile/*/addresses/**
